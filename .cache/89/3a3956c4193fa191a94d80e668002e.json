{"id":"../node_modules/redux-saga/lib/internal/buffers.js","dependencies":[{"name":"/Users/Chaucha/Documents/JavaScript Projects/pianucci-barberia/package.json","includedInParent":true,"mtime":1567362953049},{"name":"/Users/Chaucha/Documents/JavaScript Projects/pianucci-barberia/node_modules/redux-saga/package.json","includedInParent":true,"mtime":1467771935000},{"name":"./utils","loc":{"line":8,"column":21},"parent":"/Users/Chaucha/Documents/JavaScript Projects/pianucci-barberia/node_modules/redux-saga/lib/internal/buffers.js","resolved":"/Users/Chaucha/Documents/JavaScript Projects/pianucci-barberia/node_modules/redux-saga/lib/internal/utils.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buffers = exports.BUFFER_OVERFLOW = undefined;\n\nvar _utils = require('./utils');\n\nvar BUFFER_OVERFLOW = exports.BUFFER_OVERFLOW = 'Channel\\'s Buffer overflow!';\n\nvar ON_OVERFLOW_THROW = 1;\nvar ON_OVERFLOW_DROP = 2;\nvar ON_OVERFLOW_SLIDE = 3;\n\nvar zeroBuffer = { isEmpty: _utils.kTrue, put: _utils.noop, take: _utils.noop };\n\n/**\r\n  TODO: Need to make a more optimized implementation: e.g. Ring buffers, linked lists with Node Object pooling...\r\n**/\nfunction arrBuffer() {\n  var limit = arguments.length <= 0 || arguments[0] === undefined ? Infinity : arguments[0];\n  var overflowAction = arguments[1];\n\n  var arr = [];\n  return {\n    isEmpty: function isEmpty() {\n      return !arr.length;\n    },\n    put: function put(it) {\n      if (arr.length < limit) {\n        arr.push(it);\n      } else {\n        switch (overflowAction) {\n          case ON_OVERFLOW_THROW:\n            throw new Error(BUFFER_OVERFLOW);\n          case ON_OVERFLOW_SLIDE:\n            arr.shift();\n            arr.push(it);\n            break;\n          default:\n          // DROP\n        }\n      }\n    },\n    take: function take() {\n      return arr.shift();\n    }\n  };\n}\n\nvar buffers = exports.buffers = {\n  none: function none() {\n    return zeroBuffer;\n  },\n  fixed: function fixed(limit) {\n    return arrBuffer(limit, ON_OVERFLOW_THROW);\n  },\n  dropping: function dropping(limit) {\n    return arrBuffer(limit, ON_OVERFLOW_DROP);\n  },\n  sliding: function sliding(limit) {\n    return arrBuffer(limit, ON_OVERFLOW_SLIDE);\n  }\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/redux-saga/lib/internal/buffers.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}}],"sources":{"../node_modules/redux-saga/lib/internal/buffers.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buffers = exports.BUFFER_OVERFLOW = undefined;\n\nvar _utils = require('./utils');\n\nvar BUFFER_OVERFLOW = exports.BUFFER_OVERFLOW = 'Channel\\'s Buffer overflow!';\n\nvar ON_OVERFLOW_THROW = 1;\nvar ON_OVERFLOW_DROP = 2;\nvar ON_OVERFLOW_SLIDE = 3;\n\nvar zeroBuffer = { isEmpty: _utils.kTrue, put: _utils.noop, take: _utils.noop };\n\n/**\r\n  TODO: Need to make a more optimized implementation: e.g. Ring buffers, linked lists with Node Object pooling...\r\n**/\nfunction arrBuffer() {\n  var limit = arguments.length <= 0 || arguments[0] === undefined ? Infinity : arguments[0];\n  var overflowAction = arguments[1];\n\n  var arr = [];\n  return {\n    isEmpty: function isEmpty() {\n      return !arr.length;\n    },\n    put: function put(it) {\n      if (arr.length < limit) {\n        arr.push(it);\n      } else {\n        switch (overflowAction) {\n          case ON_OVERFLOW_THROW:\n            throw new Error(BUFFER_OVERFLOW);\n          case ON_OVERFLOW_SLIDE:\n            arr.shift();\n            arr.push(it);\n            break;\n          default:\n          // DROP\n        }\n      }\n    },\n    take: function take() {\n      return arr.shift();\n    }\n  };\n}\n\nvar buffers = exports.buffers = {\n  none: function none() {\n    return zeroBuffer;\n  },\n  fixed: function fixed(limit) {\n    return arrBuffer(limit, ON_OVERFLOW_THROW);\n  },\n  dropping: function dropping(limit) {\n    return arrBuffer(limit, ON_OVERFLOW_DROP);\n  },\n  sliding: function sliding(limit) {\n    return arrBuffer(limit, ON_OVERFLOW_SLIDE);\n  }\n};"},"lineCount":65}},"error":null,"hash":"16083417852d346e11d12c4a72c70a9e","cacheData":{"env":{}}}