{"id":"sagas/loadDashboardNonSequenced.js","dependencies":[{"name":"/Users/Chaucha/Documents/JavaScript Projects/pianucci-barberia/package.json","includedInParent":true,"mtime":1567309694886},{"name":"redux-saga/effects","loc":{"line":1,"column":40},"parent":"/Users/Chaucha/Documents/JavaScript Projects/pianucci-barberia/src/sagas/loadDashboardNonSequenced.js","resolved":"/Users/Chaucha/Documents/JavaScript Projects/pianucci-barberia/node_modules/redux-saga/effects.js"},{"name":"./apiCalls","loc":{"line":2,"column":55},"parent":"/Users/Chaucha/Documents/JavaScript Projects/pianucci-barberia/src/sagas/loadDashboardNonSequenced.js","resolved":"/Users/Chaucha/Documents/JavaScript Projects/pianucci-barberia/src/sagas/apiCalls.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadDashboardNonSequenced = loadDashboardNonSequenced;\nexports.getUserFromState = void 0;\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _apiCalls = require(\"./apiCalls\");\n\nvar _marked =\n/*#__PURE__*/\nregeneratorRuntime.mark(loadDashboardNonSequenced);\n\nvar getUserFromState = function getUserFromState(state) {\n  return state.user;\n};\n\nexports.getUserFromState = getUserFromState;\n\nfunction loadDashboardNonSequenced() {\n  return regeneratorRuntime.wrap(function loadDashboardNonSequenced$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":9,"column":0},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":2,"column":0}},{"name":"loadDashboardNonSequenced","generated":{"line":15,"column":24},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":6,"column":17}},{"generated":{"line":17,"column":0},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":4,"column":7}},{"name":"getUserFromState","generated":{"line":17,"column":4},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":4,"column":13}},{"generated":{"line":17,"column":20},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":4,"column":29}},{"generated":{"line":17,"column":23},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":4,"column":32}},{"name":"getUserFromState","generated":{"line":17,"column":32},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":4,"column":13}},{"generated":{"line":17,"column":48},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":4,"column":32}},{"name":"state","generated":{"line":17,"column":49},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":4,"column":33}},{"generated":{"line":17,"column":54},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":4,"column":32}},{"generated":{"line":18,"column":0},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":4,"column":32}},{"name":"state","generated":{"line":18,"column":9},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":4,"column":43}},{"generated":{"line":18,"column":14},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":4,"column":48}},{"name":"user","generated":{"line":18,"column":15},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":4,"column":49}},{"generated":{"line":18,"column":19},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":4,"column":32}},{"generated":{"line":19,"column":0},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":4,"column":32}},{"generated":{"line":19,"column":1},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":4,"column":7}},{"generated":{"line":23,"column":0},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":6,"column":7}},{"name":"loadDashboardNonSequenced","generated":{"line":23,"column":9},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":6,"column":17}},{"generated":{"line":23,"column":34},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":6,"column":7}},{"generated":{"line":24,"column":0},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":6,"column":7}},{"generated":{"line":25,"column":0},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":6,"column":7}},{"generated":{"line":26,"column":0},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":6,"column":7}},{"generated":{"line":27,"column":0},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":6,"column":7}},{"generated":{"line":28,"column":0},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":6,"column":7}},{"generated":{"line":29,"column":0},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":6,"column":7}},{"generated":{"line":30,"column":0},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":6,"column":7}},{"generated":{"line":31,"column":0},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":6,"column":7}},{"generated":{"line":32,"column":0},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":6,"column":7}},{"generated":{"line":33,"column":0},"source":"sagas/loadDashboardNonSequenced.js","original":{"line":6,"column":7}}],"sources":{"sagas/loadDashboardNonSequenced.js":"import { call, put, select , take} from 'redux-saga/effects';\nimport {loadDeparture, loadFlight, loadForecast } from './apiCalls';\n\nexport const getUserFromState = (state) => state.user;\n\nexport function* loadDashboardNonSequenced() {\n /* try {\n    //Wait for the user to be loaded\n    yield take('FETCH_USER_SUCCESS');\n\n    //Take the user info from the store\n    const user = yield select(getUserFromState);\n\n    //Get Departure information\n    const departure = yield call(loadDeparture, user);\n\n    //Flight and Forecast can be called non-sequenced /* BUT BLOCKING \n    const [flight, forecast] = yield [call(loadFlight, departure.flightID), call(loadForecast, departure.date)];\n\n    //Tell the store we are ready to be displayed\n    yield put({type: 'FETCH_DASHBOARD2_SUCCESS', payload: {departure, flight, forecast}});\n\n  } catch(error) {\n    yield put({type: 'FETCH_FAILED', error: error.message});\n  }*/\n}\n"},"lineCount":null}},"error":null,"hash":"5971ec640da034dbe8a2b15eabae1106","cacheData":{"env":{}}}