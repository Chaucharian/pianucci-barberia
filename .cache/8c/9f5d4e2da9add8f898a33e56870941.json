{"id":"../node_modules/redux/lib/createStore.js","dependencies":[{"name":"/Users/Chaucha/Documents/JavaScript Projects/pianucci-barberia/package.json","includedInParent":true,"mtime":1567362953049},{"name":"/Users/Chaucha/Documents/JavaScript Projects/pianucci-barberia/node_modules/redux/package.json","includedInParent":true,"mtime":1461500315000},{"name":"lodash/isPlainObject","loc":{"line":7,"column":29},"parent":"/Users/Chaucha/Documents/JavaScript Projects/pianucci-barberia/node_modules/redux/lib/createStore.js","resolved":"/Users/Chaucha/Documents/JavaScript Projects/pianucci-barberia/node_modules/lodash/isPlainObject.js"},{"name":"symbol-observable","loc":{"line":11,"column":32},"parent":"/Users/Chaucha/Documents/JavaScript Projects/pianucci-barberia/node_modules/redux/lib/createStore.js","resolved":"/Users/Chaucha/Documents/JavaScript Projects/pianucci-barberia/node_modules/symbol-observable/index.js"}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\nexports.ActionTypes = undefined;\nexports[\"default\"] = createStore;\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _symbolObservable = require('symbol-observable');\n\nvar _symbolObservable2 = _interopRequireDefault(_symbolObservable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar ActionTypes = exports.ActionTypes = {\n  INIT: '@@redux/INIT'\n};\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [initialState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} enhancer The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\nfunction createStore(reducer, initialState, enhancer) {\n  var _ref2;\n\n  if (typeof initialState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = initialState;\n    initialState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, initialState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = initialState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!(0, _isPlainObject2[\"default\"])(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i]();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.INIT });\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/zenparsing/es-observable\n   */\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object') {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    }, _ref[_symbolObservable2[\"default\"]] = function () {\n      return this;\n    }, _ref;\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[_symbolObservable2[\"default\"]] = observable, _ref2;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/redux/lib/createStore.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/redux/lib/createStore.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}}],"sources":{"../node_modules/redux/lib/createStore.js":"'use strict';\n\nexports.__esModule = true;\nexports.ActionTypes = undefined;\nexports[\"default\"] = createStore;\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _symbolObservable = require('symbol-observable');\n\nvar _symbolObservable2 = _interopRequireDefault(_symbolObservable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar ActionTypes = exports.ActionTypes = {\n  INIT: '@@redux/INIT'\n};\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [initialState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} enhancer The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\nfunction createStore(reducer, initialState, enhancer) {\n  var _ref2;\n\n  if (typeof initialState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = initialState;\n    initialState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, initialState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = initialState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!(0, _isPlainObject2[\"default\"])(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i]();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.INIT });\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/zenparsing/es-observable\n   */\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object') {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    }, _ref[_symbolObservable2[\"default\"]] = function () {\n      return this;\n    }, _ref;\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[_symbolObservable2[\"default\"]] = observable, _ref2;\n}"},"lineCount":262}},"error":null,"hash":"b6edd11f4de4fedaab9c65d149729aeb","cacheData":{"env":{}}}